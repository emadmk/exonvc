version: "3.9"

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: exonvc-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-exonvc_invest}
      POSTGRES_USER: ${POSTGRES_USER:-exonvc_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-exonvc_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - exonvc_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-exonvc_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: exonvc-backend
    environment:
      # Database
      - DATABASE_URL=${DATABASE_URL:-postgresql://exonvc_user:exonvc_password@db:5432/exonvc_invest}
      
      # App Config
      - APP_ENV=${APP_ENV:-production}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - BACKEND_HOST=${BACKEND_HOST:-0.0.0.0}
      - BACKEND_PORT=${BACKEND_PORT:-8050}
      
      # Security
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-exonvc-production-secret-key}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_EXPIRATION_HOURS=${JWT_EXPIRATION_HOURS:-24}
      
      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - KAVENEGAR_API_KEY=${KAVENEGAR_API_KEY}
      
      # Admin Config
      - DEFAULT_ADMIN_USERNAME=${DEFAULT_ADMIN_USERNAME:-admin}
      - DEFAULT_ADMIN_PASSWORD=${DEFAULT_ADMIN_PASSWORD:-admin123}
      - DEFAULT_ADMIN_EMAIL=${DEFAULT_ADMIN_EMAIL:-admin@exonvc.ir}
      
      # CORS
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://invest.exonvc.ir,http://localhost:3050}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-invest.exonvc.ir,localhost}
      
      # File Upload
      - UPLOAD_PATH=${UPLOAD_PATH:-/app/data/uploads}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE:-10485760}
      - ALLOWED_EXTENSIONS=${ALLOWED_EXTENSIONS:-jpg,jpeg,png,gif,pdf,doc,docx}
      
      # Development Features
      - AUTO_MIGRATE=${AUTO_MIGRATE:-true}
      - SEED_SAMPLE_DATA=${SEED_SAMPLE_DATA:-true}
    
    ports:
      - "${BACKEND_PORT:-8050}:${BACKEND_PORT:-8050}"
    volumes:
      - ./backend:/app
      - ./system_prompt.txt:/app/system_prompt.txt
      - ./data:/app/data
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - exonvc_network
    restart: unless-stopped
    # ✅ Backend healthcheck غیرفعال شده
    healthcheck:
      disable: true

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: exonvc-frontend
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - APP_ENV=${APP_ENV:-production}
      - FRONTEND_PORT=${FRONTEND_PORT:-3050}
      
      # API URLs
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://invest.exonvc.ir}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL:-wss://invest.exonvc.ir/ws}
      - NEXT_PUBLIC_FRONTEND_URL=http://localhost:${FRONTEND_PORT:-3050}
      
      # Site Config
      - NEXT_PUBLIC_SITE_NAME=ExonVC Investment Platform
      - NEXT_PUBLIC_SITE_DESCRIPTION=پلتفرم هوشمند سرمایه‌گذاری
      
      # Development
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING:-true}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING:-true}
    
    ports:
      - "${FRONTEND_PORT:-3050}:${FRONTEND_PORT:-3050}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_started
    networks:
      - exonvc_network
    restart: unless-stopped
    # ✅ Frontend healthcheck غیرفعال شده
    healthcheck:
      disable: true

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: exonvc-nginx
    ports:
      - "8081:80"
      - "8143:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./data/uploads:/var/www/uploads:ro
    environment:
      - BACKEND_PORT=${BACKEND_PORT:-8050}
      - FRONTEND_PORT=${FRONTEND_PORT:-3050}
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_started
    networks:
      - exonvc_network
    restart: unless-stopped
    # ✅ Nginx healthcheck غیرفعال شده
    healthcheck:
      disable: true

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: exonvc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: >
      sh -c "
        if [ -n \"$REDIS_PASSWORD\" ]; then
          redis-server --requirepass $REDIS_PASSWORD --appendonly yes
        else
          redis-server --appendonly yes
        fi
      "
    networks:
      - exonvc_network
    restart: unless-stopped
    healthcheck:
      disable: true

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  exonvc_network:
    name: exonvc_network
    driver: bridge