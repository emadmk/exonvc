version: "3.9"

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: exonvc-postgres
    environment:
      POSTGRES_DB: exonvc_invest
      POSTGRES_USER: exonvc_user
      POSTGRES_PASSWORD: exonvc_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - exonvc_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: exonvc-backend
    environment:
      - DATABASE_URL=postgresql://exonvc_user:exonvc_password@db:5432/exonvc_invest
      - ENVIRONMENT=production
    ports:
      - "8050:8050"
    volumes:
      - ./backend:/app
      - ./system_prompt.txt:/app/system_prompt.txt
    depends_on:
      - db
    networks:
      - exonvc_network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: exonvc-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://invest.exonvc.ir
      - NEXT_PUBLIC_WS_URL=wss://invest.exonvc.ir/ws
    ports:
      - "3050:3050"
    depends_on:
      - backend
    networks:
      - exonvc_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: exonvc-nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - exonvc_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  exonvc_network:
    name: exonvc_network
